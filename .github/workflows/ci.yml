
name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Debug Node.js version
      run: |
        node --version
        npm --version
        pwd
        ls -la
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      timeout-minutes: 5
    
    - name: Debug dependencies
      run: |
        npm list --depth=0
        npm list vitest
        npm list @testing-library/react
    
    - name: Run linting
      run: npm run lint
      timeout-minutes: 3
    
    - name: Run type checking
      run: npm run type-check
      timeout-minutes: 3
    
    - name: Run unit tests
      run: npm run test:unit --run --reporter=verbose
      timeout-minutes: 5
    
    - name: Run integration tests
      run: npm run test:integration --run --reporter=verbose
      timeout-minutes: 5
    
    - name: Generate test coverage
      run: npm run test:coverage --run --reporter=verbose
      timeout-minutes: 5
    
    - name: Build application
      run: npm run build
      timeout-minutes: 10

  security:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      timeout-minutes: 5
    
    - name: Run security audit
      run: npm audit --audit-level=high
      timeout-minutes: 3

  deploy:
    needs: [test, security]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: echo "Deploy to production environment"
      # Add actual deployment steps here
